@{
    ViewData["Title"] = "Annonce";
}
<h2>@ViewData["Title"].</h2>
<h3>@ViewData["Message"]</h3>

@model deprosa.Web.Model.SaleListingCreateViewModel
<div class="row" id="updatethis">
    <div class="col-md-8">
        <section>
            <div class="form-group">

    @using (Html.BeginForm("Create", "CreateSalelisting", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="col-md-offset-2 col-md-10">
            <div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        @Html.DisplayNameFor(e => e.MainCategories)
                        @Html.DropDownListFor(e => e.SelectedMainCategoryId, Model.MainCategoriesSelectList, "Vælg", new { @onchange = "SelectMainCategory(this.value)" })
                    </div>
                </div>
            </div>
            @if (Model.SelectedMainCategoryId > 0)
            {
                <div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            @Html.DisplayNameFor(e => e.SubCategories)
                            @Html.DropDownListFor(e => e.SelectedSubCategoryId, Model.SubCategoriesSelectList, "Vælg", new { @onchange = "SelectSubCategory(this.value)" })
                        </div>
                    </div>
                </div>

            }
            @if (Model.SelectedSubCategoryId > 0)
            {
                <div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            @Html.DisplayNameFor(e => e.ProductTypes)
                            @Html.DropDownListFor(e => e.SelectedProductTypeId, Model.ProductTypesSelectList, "Vælg",
                                            new { @onchange = "SelectProductType(this.value)" })
                        </div>
                    </div>
                </div>
            }

            @if (Model.SelectedProductTypeId > 0)
            {
                <div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            @Html.DisplayNameFor(e => e.SaleListing.Title)
                        </div>
                        <div class="col-md-offset-2 col-md-10">
                            @Html.TextBoxFor(e => e.SaleListing.Title)
                        </div>
                    </div>
                </div>

                if (Model.SelectedProductType.Types.HasFlag(deprosa.Common.eSalelistingTypes.Dimensions))
                {
                    @Html.Partial("~/Views/Shared/Partial/SalelistingDetails/_dimension.cshtml", Model)
                }
                if (Model.SelectedProductType.Types.HasFlag(deprosa.Common.eSalelistingTypes.RAM))
                {
                    @Html.Partial("~/Views/Shared/Partial/SalelistingDetails/_ram.cshtml", Model)
                }
                if (Model.SelectedProductType.Types.HasFlag(deprosa.Common.eSalelistingTypes.Harddisk))
                {
                    @Html.Partial("~/Views/Shared/Partial/SalelistingDetails/_harddisk.cshtml", Model)
                }
                if (Model.SelectedProductType.Types.HasFlag(deprosa.Common.eSalelistingTypes.Length))
                {
                    @Html.Partial("~/Views/Shared/Partial/SalelistingDetails/_length.cshtml", Model)
                }
                if (Model.SelectedProductType.Types.HasFlag(deprosa.Common.eSalelistingTypes.Processor))
                {
                    @Html.Partial("~/Views/Shared/Partial/SalelistingDetails/_processor.cshtml", Model)
                }
                if (Model.SelectedProductType.Types.HasFlag(deprosa.Common.eSalelistingTypes.Screen))
                {
                    @Html.Partial("~/Views/Shared/Partial/SalelistingDetails/_screen.cshtml", Model)
                }
                if (Model.SelectedProductType.Types.HasFlag(deprosa.Common.eSalelistingTypes.Thickness))
                {
                    @Html.Partial("~/Views/Shared/Partial/SalelistingDetails/_thickness.cshtml", Model)
                }
                if (Model.SelectedProductType.Types.HasFlag(deprosa.Common.eSalelistingTypes.Weight))
                {
                    @Html.Partial("~/Views/Shared/Partial/SalelistingDetails/_weight.cshtml", Model)
                    if (Model.SelectedProductType.Types.HasFlag(deprosa.Common.eSalelistingTypes.PrivateCar))
                    {
                        @Html.Partial("~/Views/Shared/Partial/SalelistingDetails/_privatecar.cshtml", Model)
                    }
                    if (Model.SelectedProductType.Types.HasFlag(deprosa.Common.eSalelistingTypes.CompanyCar))
                    {
                        @Html.Partial("~/Views/Shared/Partial/SalelistingDetails/_companycar.cshtml", Model)

                    }
                }
                <div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            @Html.DisplayNameFor(e => e.SaleListing.Condition)
                        </div>
                        <div class="col-md-offset-2 col-md-10">
                            @Html.EnumDropDownListFor(e => e.SaleListing.Condition, "Vælg")
                        </div>
                    </div>
                </div>
                <div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            @Html.DisplayNameFor(e => e.SaleListing.Description)
                        </div>
                        <div class="col-md-offset-2 col-md-10">
                            @Html.TextAreaFor(e => e.SaleListing.Description)
                        </div>
                    </div>
                </div>
                <div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            @Html.DisplayNameFor(e => e.SaleListing.Price)
                        </div>
                        <div class="col-md-offset-2 col-md-10">
                            @Html.TextBoxFor(e => e.SaleListing.Price)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" ac class="btn btn-default">Opret</button>
                    </div>
                </div>
            }
        </div>
    }
@if (Model.SelectedProductTypeId > 0)
{
    using (Html.BeginForm("UploadImages", "CreateSalelisting", FormMethod.Post))
     {
         <div class="span7">
             <div class="well">
                 <i class="icon-plus"></i><span>&nbsp;&nbsp;Add files...</span>
                 <input type="file" id="fileupload" name="fileupload" accept="image/*" multiple="multiple">
                 <button id="btnUploadAll" class="btn btn-success pull-right" type="button">
                     Upload All
                 </button>
                 <div class="clearfix">
                 </div>
                 <div class="progress">
                     <div class="bar" id="overallbar" style="width: 0%">
                     </div>
                 </div>
             </div>
         </div>
         <div class="span7">
             <div class="well hide" id="filelistholder">
             </div>
         </div>
         <div class="span7">
         </div>
     }
}
            </div>
        </section>
    </div>
</div>


@section Scripts{
<script type="text/javascript">
        $(function () {
            $('#fileupload').fileupload({
                dataType: "json",
                url: "/CreateSalelisting/UploadImages",
                limitConcurrentUploads: 1,
                sequentialUploads: true,
                progressInterval: 100,
                maxChunkSize: 10000,
                add: function (e, data) {
                    $('#filelistholder').removeClass('hide');
                    data.context = $('<div />').text(data.files[0].name).appendTo('#filelistholder');
                    $('</div><div class="progress"><div class="bar" style="width:0%"></div></div>').appendTo(data.context);
                    $('#btnUploadAll').click(function () {
                        data.submit();
                    });
                },
                done: function (e, data) {
                    data.context.text(data.files[0].name + '... Completed');
                    $('</div><div class="progress"><div class="bar" style="width:100%"></div></div>').appendTo(data.context);
                },
                progressall: function (e, data) {
                    var progress = parseInt(data.loaded / data.total * 100, 10);
                    $('#overallbar').css('width', progress + '%');
                },
                progress: function (e, data) {
                    var progress = parseInt(data.loaded / data.total * 100, 10);
                    data.context.find('.bar').css('width', progress + '%');
                }
            });
        });
</script>
<script>
    function SelectMainCategory(val) {
        window.location.href = "/CreateSaleListing/SetSelectedMainCategory?categoryid=" + val;
    }
    function SelectSubCategory(val) {
        window.location.href = "/CreateSaleListing/SetSelectedSubCategory?categoryid=" + val;
    }
    function SelectProductType(val) {
        window.location.href = "/CreateSaleListing/SetSelectedProductType?producttypeid=" + val;
    }
</script>
}


